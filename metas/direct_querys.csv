1,upgrade_customer,"select T1.""MONTH_AND_YEAR"" , count(T1.""handle"") FILTER(where T1.""cust_status""='upgrade') , count(T1.""handle"") FILTER(where T1.""cust_status""='upgrade') from (select T1.* , case when LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") < T1.""sum"" then 'upgrade' end ""cust_status"" , CASE WHEN LAG(T1.""sum"") OVER(PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""sum"" - LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""sum"" END ""mrr_diff"" from (select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") , T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp		 and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND (T4.""mrr"" > 0) AND date_trunc('month',T2.""cal_date"") TIMERANGE and true ORDER BY 1 ASC 	) T1 group by 1,3,4,5,6,7,8 order by 1 asc ) T1 ) T1 group by 1 order by 1 asc"
2,downgrade_customer,"select T1.""MONTH_AND_YEAR"" , count(T1.""handle"") FILTER(where T1.""cust_status""='downgrade') , count(T1.""handle"") FILTER(where T1.""cust_status""='downgrade') from (select T1.* , case when LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") > T1.""sum"" then 'downgrade' end ""cust_status"" , CASE WHEN LAG(T1.""sum"") OVER(PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""sum"" - LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""sum"" END ""mrr_diff"" from (select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") , T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp	and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND (T4.""mrr"" > 0) AND date_trunc('month',T2.""cal_date"") TIMERANGE and true ORDER BY 1 ASC 	) T1 group by 1,3,4,5,6,7,8 order by 1 asc ) T1 ) T1 group by 1 order by 1 asc"
3,new_paid_customer,"select T1.""MONTH_AND_YEAR"" , count(T1.""handle"") FILTER(where T1.""cust_status""='new_paid') , count(T1.""handle"") FILTER(where T1.""cust_status""='new_paid') from (select T1.* , case when (LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") IS NULL OR LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") = 0 ) AND T1.""sum"" > 0 then 'new_paid' end ""cust_status"" , CASE WHEN LAG(T1.""sum"") OVER(PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""sum"" - LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""sum"" END ""mrr_diff"" from 	(select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") , T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp		 and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND (T4.""mrr"" > 0) AND date_trunc('month',T2.""cal_date"") INNERTIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,3,4,5,6,7,8 order by 1 asc 	) T1 ) T1 where T1.""MONTH_AND_YEAR"" TIMERANGE group by 1 order by 1 asc"
4,net_mrr_growth,"select T1.""MONTH_AND_YEAR"" , greatest(sum(T1.""mrr_diff"") FILTER(where T1.""cust_status""='new') , 0) + greatest(sum(T1.""mrr_diff"") FILTER(where T1.""cust_status""='upgrade') , 0) - greatest(sum(T1.""mrr_diff"") FILTER(where T1.""cust_status""='downgrade') , 0) , count(distinct T1.""handle"") from (select T1.* , case when LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"") < T1.""sum"" then 'upgrade' when LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"") > T1.""sum"" then 'downgrade' when (LAG(T1.""handle"") OVER (PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"") IS NULL ) AND T1.""handle"" IS NOT NULL then 'new' end ""cust_status"" , CASE WHEN LAG(T1.""sum"") OVER(PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""sum"" - LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""sum"" END ""mrr_diff"" from 	(select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") , T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"", T1.""data_source_id"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"", CC.""data_source_id"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND (T4.""mrr"" > 0) AND date_trunc('month',T2.""cal_date"") INNERTIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,3,4,5,6,7,8,9 order by 1 asc ) T1 ) T1 where T1.""MONTH_AND_YEAR"" TIMERANGE group by 1 order by 1 asc"
5,new_customer,"select T1.""MONTH_AND_YEAR"" , count(T1.""handle"") FILTER(where T1.""cust_status""='new') , count(T1.""handle"") FILTER(where T1.""cust_status""='new') from (select T1.* , case when (LAG(T1.""handle"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") IS NULL ) AND T1.""handle"" IS NOT NULL then 'new' end ""cust_status"" , CASE WHEN LAG(T1.""sum"") OVER(PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""sum"" - LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""sum"" END ""mrr_diff"" from 	(select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") , T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp		 and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND T4.""status""='ACTIVE' AND date_trunc('month',T2.""cal_date"") INNERTIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,3,4,5,6,7,8 order by 1 asc ) T1 ) T1 where T1.""MONTH_AND_YEAR"" TIMERANGE group by 1 order by 1 asc"
6,churn_customer,"select T1.""MONTH_AND_YEAR"" , count(T1.""handle"") FILTER(where T1.""cust_status"" = 'churn') ""CHURN_CUSTOMER"" , count(T1.""handle"") FILTER(where T1.""cust_status"" = 'churn') ""CHURN_CUSTOMER"" from (select T1.""handle"" , T1.""MONTH_AND_YEAR"" , T1.""first_name"" , T1.""last_name"" , T1.""email"" , T1.""country"" , T1.""created_at"", T1.""data_source_id"", case when (count(T1.""status"") - (count(T1.""status"") FILTER(where T1.""status""='CANCELLED' ))) = 0 and lag((count(T1.""status"") - (count(T1.""status"") FILTER(where T1.""status""='CANCELLED' ))),1) over ( partition by T1.""handle"" , T1.""data_source_id"" order by T1.""MONTH_AND_YEAR"" ) <> 0 then 'churn'end ""cust_status"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",T4.""status"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'UTC' )::timestamp ""created_at"", CC.""data_source_id"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND date_trunc('month',T2.""cal_date"") TIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,2,3,4,5,6,7,8 order by 1 asc ) T1 group by 1 order by 1"
7,upgrade_customer_vud,"select T1.""MONTH_AND_YEAR"", T1.""handle"", T1.""Customers First Name"",T1.""Customers Created At"",T1.""mrr_diff"" , T1.""activated_at"" from (select T1.* , case when LAG(T1.""mrr"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") < T1.""mrr"" then 'upgrade' end ""cust_status"" , CASE WHEN LAG(T1.""mrr"") OVER(PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""mrr"" - LAG(T1.""mrr"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""mrr"" END ""mrr_diff"" from (select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") ""mrr"", T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"" , min(T1.""activated_at"") ""activated_at"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",CC.""created_at"" , T1.""activated_at"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND (T4.""mrr"" > 0) AND date_trunc('month',T2.""cal_date"") TIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,3,4,5,6,7,8 order by 1 asc ) T1 ) T1 where T1.""cust_status"" = 'upgrade' AND (date_trunc('month',T1.""MONTH_AND_YEAR"") = VUD_DATE) order by 1 asc limit 1000"
8,downgrade_customer_vud,"select T1.""MONTH_AND_YEAR"", T1.""handle"", T1.""Customers First Name"",T1.""Customers Created At"",T1.""mrr_diff"" , T1.""activated_at"" from (select T1.* , case when LAG(T1.""mrr"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") > T1.""mrr"" then 'downgrade' end ""cust_status"" , CASE WHEN LAG(T1.""mrr"") OVER(PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""mrr"" - LAG(T1.""mrr"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""mrr"" END ""mrr_diff"" from (select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") ""mrr"", T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"" , min(T1.""activated_at"") ""activated_at"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",CC.""created_at"" , T1.""activated_at""	FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND (T4.""mrr"" > 0) AND date_trunc('month',T2.""cal_date"") TIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,3,4,5,6,7,8 order by 1 asc ) T1 ) T1 where T1.""cust_status"" = 'downgrade' AND (date_trunc('month',T1.""MONTH_AND_YEAR"") = VUD_DATE) order by 1 asc limit 1000"
9,total_mrr_customer,"SELECT date_trunc('month',T1.""cal_date"") ""MONTH AND YEAR"",SUM(((T2.""mrr"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) ""TOTAL MRR"" , count(distinct CC.""PARENTID"") FROM subscription_histories T2 INNER JOIN monthly_exr_calendars T1 ON DATE_TRUNC('seconds',T1.""cal_date"") between (( T2.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T2.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE') )>DATE_TRUNC('month',T1.""cal_date"") and T1.""currency_code""=T2.""currency_code"" OR( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE') )=DATE_TRUNC('month',T1.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T2.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T2.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and T1.""currency_code""=T2.""currency_code"") INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions SS ON SS.""id"" = T2.""subscription_id"" AND SS.""data_source_id"" = T2.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = SS.""customer_id"" AND CC.""data_source_id"" = SS.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (((T2.""mrr"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate > 0) AND date_trunc('month',T1.""cal_date"") TIMERANGE and true GROUP BY 1 ORDER BY 1 ASC"
10,total_mrr_customer_vud,"select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") , T1.""parent_id"" ""Customers Id"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"" from ( SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",((T4.""mrr"")*1.0/T2.exchange_rate)*T2_exr.exchange_rate ""MRR"",CC.""PARENTID"" ""parent_id"" ,CC.""first_name"" ,CC.""last_name"" ,CC.""email"",CC.""country"" ,CC.""created_at"" FROM subscription_histories T4 INNER JOIN monthly_exr_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") and T2.""currency_code""=T4.""currency_code"" OR( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and T2.""currency_code""=T4.""currency_code"") INNER JOIN monthly_exr_calendars T2_exr ON T2_exr.cal_date = T2.cal_date and T2_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND (((T4.""mrr"")*1.0/T2.exchange_rate)*T2_exr.exchange_rate > 0) AND date_trunc('month',T2.""cal_date"") TIMERANGE and true ORDER BY 1 ASC ) T1 where (date_trunc('month',T1.""MONTH_AND_YEAR"") = VUD_DATE) group by 1,3,4,5,6,7,8 order by 1 asc limit 1000"
11,receivable_overdue,"SELECT date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""MONTH AND YEAR OF INVOICE DATE"",SUM(SUM(((T2.""amount_due"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate)) OVER() ""Invoice Payment Due"" , count(distinct CC.""PARENTID"") FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('PAYMENT_DUE','NOT_PAID')) AND date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE and true GROUP BY 1 ORDER BY 1 ASC"
12,receivable_overdue_vud,"SELECT date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""MONTH AND YEAR OF INVOICE DATE"",SUM(SUM(((T2.""amount_due"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate)) OVER() ""Invoice Payment Due"" , CC.""PARENTID"" ""parent_id"", (( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"" , CC.""first_name"" ""first_name"", CC.""last_name"" ""last_name"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON CC.""id"" = T2.""customer_id"" and CC.""data_source_id""=T2.""data_source_id"" WHERE (T2.""status"" IN('PAYMENT_DUE','NOT_PAID')) AND(T2.data_source_id=DATA_SOURCE_ID) AND date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE and true AND (date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) = VUD_DATE) GROUP BY 1,3,4,5,6 ORDER BY 1 ASC limit 1000"
13,receivable_currentdue,"SELECT date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""MONTH AND YEAR OF INVOICE DATE"",SUM(((T2.""total"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) FILTER(WHERE T2.""status"" IN('POSTED')) ""Current Due"" , count(distinct CC.""PARENTID"") FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE and true GROUP BY 1 ORDER BY 1 ASC"
14,receivable_currentdue_vud,"SELECT date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""MONTH AND YEAR OF INVOICE DATE"",SUM(((T2.""total"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) FILTER(WHERE T2.""status"" IN('POSTED')) ""Current Due"" , CC.""PARENTID"", CC.""created_at"" ""created_at"" , CC.""first_name"" ""first_name"", CC.""last_name"" ""last_name"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON CC.""id"" = T2.""customer_id"" and CC.""data_source_id""=T2.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE and true AND (date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) = VUD_DATE) GROUP BY 1,3,4,5,6 ORDER BY 1 ASC limit 1000"
15,total_billing,"SELECT date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""MONTH AND YEAR OF INVOICE DATE"",SUM(((T2.""total"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) ""TOTAL BILLING"" , count(distinct CC.""PARENTID"") FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('NOT_PAID','PAID','PAYMENT_DUE','POSTED')) AND date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE and true GROUP BY 1 ORDER BY 1 ASC"
16,total_billing_vud,"SELECT date_trunc('month',(( T3.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""MONTH AND YEAR OF INVOICE DATE"" , sum(T3.""total"") ""Invoice Amount"" ,CC.""PARENTID"" ""handle"", CC.""created_at"" ""created_at"" , CC.""first_name"" ""first_name"", CC.""last_name"" ""last_name"" FROM invoices T3 INNER JOIN daily_exr_calendars T2 ON DATE_TRUNC('day',T2.""cal_date"")=DATE_TRUNC('day',(( T3.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T2.""currency_code""=T3.""currency_code"" INNER JOIN daily_exr_calendars T2_exr ON T2_exr.cal_date = T2.cal_date and T2_exr.currency_code='CUR_CONV' LEFT JOIN subscriptions T1 ON T1.""id"" = T3.""subscription_id"" and T1.""data_source_id""=T3.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T3.""customer_id"" and CC.""data_source_id""=T3.""data_source_id"" WHERE (T3.data_source_id=DATA_SOURCE_ID) AND (T3.""status"" IN('NOT_PAID','PAID','PAYMENT_DUE','POSTED')) AND date_trunc('month',(( T3.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE and true AND (date_trunc('month',(( T3.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) = VUD_DATE) GROUP BY 1,3,4,5,6 ORDER BY 1 ASC limit 1000"
17,receivable_summary,"select T1.""?column?"" ""Receivable"" , sum(t1.""overdue"") ""Due Amount"" , sum(t1.""count"") ""Customer Count"" from (SELECT 'Past Dues' , SUM(((T2.""amount_due"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) FILTER(where T2.""status"" in('NOT_PAID','PAYMENT_DUE')) ""overdue"" , count(distinct CC.""PARENTID"") , CC.""PARENTID"" ""handle"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('NOT_PAID','PAYMENT_DUE')) group by 4 UNION SELECT 'Current Dues' , SUM(((T2.""amount_due"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) FILTER(where T2.""status"" in('POSTED')) ""current"" , count(distinct CC.""PARENTID""), CC.""PARENTID"" ""handle"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('POSTED')) group by 4 UNION SELECT 'Total Dues' , SUM(((T2.""amount_due"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) FILTER ( where T2.""status"" in('POSTED','NOT_PAID','PAYMENT_DUE'))""TOTAL"" , count(distinct CC.""PARENTID"") , CC.""PARENTID"" ""handle"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('NOT_PAID','PAYMENT_DUE','POSTED')) and true group by 4 ) T1 INNER JOIN customers CC ON T1.""handle"" = CC.""PARENTID"" where T1.""handle"" is not null and true group by 1"
18,receivable_summary_vud,"select T1.""?column?"", CC.""PARENTID"" ""handle"" , CC.""created_at"" , CC.""first_name"", T1.""overdue"" ""Due Amount"" , CC.""email"" , CC.""company"" from (SELECT 'Past Dues' , SUM(((T2.""amount_due"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) FILTER(where T2.""status"" in('NOT_PAID','PAYMENT_DUE')) ""overdue"" , count(distinct CC.""PARENTID"") , CC.""PARENTID"" ""handle"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('NOT_PAID','PAYMENT_DUE')) group by 4 UNION SELECT 'Current Dues' , SUM(((T2.""amount_due"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) FILTER(where T2.""status"" in('POSTED')) ""current"" , count(distinct CC.""PARENTID""), CC.""PARENTID"" ""handle"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('POSTED')) group by 4 UNION SELECT 'Total Dues' , SUM(((T2.""amount_due"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) FILTER ( where T2.""status"" in('POSTED','NOT_PAID','PAYMENT_DUE'))""TOTAL"" , count(distinct CC.""PARENTID"") , CC.""PARENTID"" ""handle"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('NOT_PAID','PAYMENT_DUE','POSTED')) and true group by 4 ) T1 INNER JOIN customers CC ON T1.""handle"" = CC.""PARENTID"" where T1.""handle"" is not null and true and T1.""?column?"" = VUD_DATE order by 1 asc limit 1000"
19,net_billing,"select T1.""MONTH AND YEAR OF INVOICE DATE"" , T1.""TOTAL BILLING"" - GREATEST(T2.""Total Credit Notes"",0) ""Net Value"" , T1.""c_count"" from (SELECT date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""MONTH AND YEAR OF INVOICE DATE"",SUM(((T2.""total"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) ""TOTAL BILLING"" , count(distinct CC.""PARENTID"") ""c_count"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('NOT_PAID','PAID','PAYMENT_DUE','POSTED')) AND date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE and true GROUP BY 1 ORDER BY 1 ASC) T1 left join (SELECT date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""Month and Year of Credit Note"",SUM(((T2.""total"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) ""Total Credit Notes"" FROM credit_notes T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""reason_code"" NOT IN('WRITE_OFF')) AND date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE GROUP BY 1 ORDER BY 1 ASC) T2 ON T1.""MONTH AND YEAR OF INVOICE DATE"" = T2.""Month and Year of Credit Note"""
20,net_billing_vud,"select T1.""MONTH AND YEAR OF INVOICE DATE"" , T1.""TOTAL BILLING"" - GREATEST(T2.""Total Credit Notes"",0) ""Net Value"" , T1.""handle"" , T1.""created_at"" , T1.""first_name"" , T1.""last_name"" , T1.""country"" , T1.""email"" from (SELECT date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""MONTH AND YEAR OF INVOICE DATE"",SUM(((T2.""total"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) ""TOTAL BILLING"" , CC.""PARENTID"" , CC.""created_at"" ""created_at"" , CC.""first_name"" ""first_name"", CC.""last_name"" ""last_name"" , CC.""country"" ""country"" , CC.""email"" ""email"" FROM invoices T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id""	WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""status"" IN('NOT_PAID','PAID','PAYMENT_DUE','POSTED')) AND date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE and true GROUP BY 1,3,4,5,6,7,8 ORDER BY 1 ASC) T1 left join (SELECT date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) ""Month and Year of Credit Note"",SUM(((T2.""total"")*1.0/T1.exchange_rate)*T1_exr.exchange_rate) ""Total Credit Notes"" , CC.""PARENTID"" ""handle1"" FROM credit_notes T2 INNER JOIN daily_exr_calendars T1 ON DATE_TRUNC('day',T1.""cal_date"")=DATE_TRUNC('day',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) and T1.""currency_code""=T2.""currency_code"" INNER JOIN daily_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN customers CC ON T2.""customer_id"" = CC.""id"" AND T2.""data_source_id"" = CC.""data_source_id"" 	WHERE (T2.data_source_id=DATA_SOURCE_ID) AND (T2.""reason_code"" NOT IN('WRITE_OFF')) AND date_trunc('month',(( T2.""date"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) TIMERANGE GROUP BY 1,3 ORDER BY 1 ASC) T2 ON T1.""MONTH AND YEAR OF INVOICE DATE"" = T2.""Month and Year of Credit Note"" AND T1.""handle"" = T2.""handle1"" where (date_trunc('month',T1.""MONTH AND YEAR OF INVOICE DATE"") = VUD_DATE) order by 1 asc limit 1000"
21,new_paid_customer_vud,"select T1.""MONTH_AND_YEAR"", T1.""handle"", T1.""Customers First Name"",T1.""Customers Created At"",T1.""mrr_diff"" from (select T1.* , case when (LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") IS NULL OR LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") = 0 ) AND T1.""sum"" > 0 then 'new_paid' end ""cust_status"" , CASE WHEN LAG(T1.""sum"") OVER(PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""sum"" - LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""sum"" END ""mrr_diff"" from 	(select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") , T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp		 and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND (T4.""mrr"" > 0) AND date_trunc('month',T2.""cal_date"") INNERTIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,3,4,5,6,7,8 order by 1 asc 	) T1 ) T1 where T1.""cust_status"" = 'new_paid' AND (date_trunc('month',T1.""MONTH_AND_YEAR"") = VUD_DATE) order by 1 asc limit 1000"
22,new_customer_vud,"select T1.""MONTH_AND_YEAR"", T1.""handle"", T1.""Customers First Name"",T1.""Customers Created At"",T1.""mrr_diff"" from (select T1.* , case when (LAG(T1.""handle"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") IS NULL ) AND T1.""handle"" IS NOT NULL then 'new' end ""cust_status"" , CASE WHEN LAG(T1.""sum"") OVER(PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""sum"" - LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""sum"" END ""mrr_diff"" from 	(select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") , T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp		 and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) and T4.""status""='ACTIVE' AND date_trunc('month',T2.""cal_date"") INNERTIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,3,4,5,6,7,8 order by 1 asc 	) T1 ) T1 where T1.""cust_status"" = 'new' AND (date_trunc('month',T1.""MONTH_AND_YEAR"") = VUD_DATE) order by 1 asc limit 1000"
23,churn_customer_vud,"select T1.""MONTH_AND_YEAR"" ,T1.""first_name"", T1.""handle"" , T1.""created_at"", T1.""mrr_diff"" from ( select T1.* , CASE WHEN LAG(T1.""mrr"") OVER(PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""mrr"" - LAG(T1.""mrr"") OVER (PARTITION BY T1.""handle"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""mrr"" END ""mrr_diff"" from (select T1.""handle"" , T1.""MONTH_AND_YEAR"" , T1.""first_name"" , T1.""last_name"" , T1.""email"" , T1.""country"" , T1.""created_at"", T1.""data_source_id"", case when (count(T1.""status"") - (count(T1.""status"") FILTER(where T1.""status""='CANCELLED' ))) = 0 and lag((count(T1.""status"") - (count(T1.""status"") FILTER(where T1.""status""='CANCELLED' ))),1) over ( partition by T1.""handle"" , T1.""data_source_id"" order by T1.""MONTH_AND_YEAR"" ) <> 0 then 'churn'end ""cust_status"" , T1.""mrr"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""mrr"",T4.""status"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"", CC.""data_source_id"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND date_trunc('month',T2.""cal_date"") TIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,2,3,4,5,6,7,8,10 order by 1 asc ) T1 ) T1 where T1.""cust_status"" = 'churn' AND (date_trunc('month',T1.""MONTH_AND_YEAR"") = VUD_DATE) order by 1 asc limit 1000"
24,net_mrr_growth_vud,"select T1.""MONTH_AND_YEAR"" , T1.""handle"", T1.""Customers First Name"",T1.""Customers Created At"",T1.""mrr_diff"" , T1.""cust_status"" from (select T1.* , case when LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"") < T1.""sum"" then 'upgrade' when LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"") > T1.""sum"" then 'downgrade' when (LAG(T1.""handle"") OVER (PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"") IS NULL ) AND T1.""handle"" IS NOT NULL then 'new' end ""cust_status"" , CASE WHEN LAG(T1.""sum"") OVER(PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"") is not null then ABS(T1.""sum"" - LAG(T1.""sum"") OVER (PARTITION BY T1.""handle"",T1.""data_source_id"" ORDER BY T1.""MONTH_AND_YEAR"")) ELSE T1.""sum"" END ""mrr_diff"" from 	(select T1.""MONTH_AND_YEAR"" , sum(T1.""MRR"") , T1.""handle"" ""handle"",T1.""first_name"" ""Customers First Name"",T1.""last_name"" ""Customers Last Name"",T1.""email"" ""Customers Email"",T1.""country"" ""Customers Country"",T1.""created_at"" ""Customers Created At"", T1.""data_source_id"" from (SELECT date_trunc('month',T2.""cal_date"") ""MONTH_AND_YEAR"",T1.""handle"" ""Subscriptions Id"",T4.""mrr"" ""MRR"",CC.""PARENTID"" ""handle"",CC.""first_name"",CC.""last_name"",CC.""email"",CC.""country"",(( CC.""created_at"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp ""created_at"", CC.""data_source_id"" FROM subscription_histories T4 INNER JOIN monthly_calendars T2 ON DATE_TRUNC('seconds',T2.""cal_date"") between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))>DATE_TRUNC('month',T2.""cal_date"") OR ( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE'))=DATE_TRUNC('month',T2.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T4.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T4.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T2.cal_date and T1_exr.currency_code='CUR_CONV' INNER JOIN subscriptions T1 ON T1.""id""=T4.""subscription_id"" and T1.""data_source_id""=T4.""data_source_id"" INNER JOIN customers CC ON CC.""id"" = T1.""customer_id"" and CC.""data_source_id""=T1.""data_source_id"" WHERE (T4.data_source_id=DATA_SOURCE_ID) AND (T4.""mrr"" > 0) AND date_trunc('month',T2.""cal_date"") INNERTIMERANGE and true ORDER BY 1 ASC ) T1 group by 1,3,4,5,6,7,8,9 order by 1 asc ) T1 ) T1 where T1.""cust_status"" IN ('upgrade','downgrade','new') AND (date_trunc('month',T1.""MONTH_AND_YEAR"") = VUD_DATE) order by 1 asc limit 1000"
25,total_customer,"SELECT date_trunc('month',T1.""cal_date"") ""MONTH AND YEAR"",COUNT(distinct(CC.""PARENTID"")) FILTER(WHERE T2.""status""='ACTIVE') ""ACTIVE SUBSCRIPTIONS"" , COUNT(distinct(CC.""PARENTID"")) FILTER(WHERE T2.""status""='ACTIVE') FROM subscription_histories T2 INNER JOIN monthly_calendars T1 ON DATE_TRUNC('seconds',T1.""cal_date"") between (( T2.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T2.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE') )>DATE_TRUNC('month',T1.""cal_date"") OR( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE') )=DATE_TRUNC('month',T1.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T2.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T2.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp)INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' inner join subscriptions T3 on T3.id=T2.subscription_id and T3.data_source_id=T2.data_source_id inner join customers CC on CC.ID=T3.customer_id and CC.data_source_id=T3.data_source_id WHERE T2.data_source_id=DATA_SOURCE_ID AND date_trunc('month',T1.""cal_date"") TIMERANGE and true GROUP BY 1 ORDER BY 1 asc"
26,total_customer_vud,"SELECT date_trunc('month',T1.""cal_date"") ""MONTH AND YEAR"" , sum(T2.""mrr"") , CC.""PARENTID"" , CC.""first_name"", CC.""created_at"" FROM subscription_histories T2 INNER JOIN monthly_calendars T1 ON DATE_TRUNC('seconds',T1.""cal_date"") between (( T2.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T2.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and DATE_TRUNC('month',(now() at TIME ZONE 'TZONE') )>DATE_TRUNC('month',T1.""cal_date"") OR( DATE_TRUNC('month',(now() at TIME ZONE 'TZONE') )=DATE_TRUNC('month',T1.""cal_date"") and (now() at TIME ZONE 'TZONE') between (( T2.""period_start"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp and (( T2.""period_end"" at TIME ZONE 'UTC' ) at TIME ZONE 'TZONE' )::timestamp) INNER JOIN monthly_exr_calendars T1_exr ON T1_exr.cal_date = T1.cal_date and T1_exr.currency_code='CUR_CONV' inner join subscriptions T3 on T3.id=T2.subscription_id and T3.data_source_id=T2.data_source_id inner join customers CC on CC.ID=T3.customer_id and CC.data_source_id=T3.data_source_id WHERE T2.""status""='ACTIVE' AND T2.data_source_id=DATA_SOURCE_ID AND date_trunc('month',T1.""cal_date"") TIMERANGE and true AND date_trunc('month',T1.""cal_date"") = VUD_DATE group by 1,3,4,5 order by 1 asc limit 1000"